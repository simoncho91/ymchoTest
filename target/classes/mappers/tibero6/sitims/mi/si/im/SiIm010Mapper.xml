<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : SiIm010Mapper.xml
    Description   : 성분 DB목록

    ==개정이력========================================
    수정일                수정자       Version    Query Id
    ========== ======= =========   ===================
    2020.07.09  jjw       1.0        최초 생성
-->
<mapper namespace="SiIm010Mapper">
	
	<!--	성분DB 기본 SQL	-->
	<sql id="siIm010ListInclude">	
		FROM TSI_CON_M MST
		INNER JOIN ( 
			SELECT V_CON_CD, MAX(N_VER_SEQ) N_VER_SEQ 
			FROM TSI_CON_M 
			WHERE V_DEL_YN = 'N'
			GROUP BY V_CON_CD
			) SUB ON MST.V_CON_CD = SUB.V_CON_CD
			<if test="i_nVerSeq == null or i_nVerSeq == ''">
				AND MST.N_VER_SEQ = SUB.N_VER_SEQ
			</if>
		LEFT JOIN (
				SELECT V_CON_CD
					, N_VER_SEQ
					, LISTAGG(DECODE(V_FLAG,'L',FN_SUB_CODENM('ODM_EXPORT',V_GL_CD),NULL),';') WITHIN GROUP(ORDER BY V_GL_CD) AS V_L_GL_NM
					, LISTAGG(DECODE(V_FLAG,'B',FN_SUB_CODENM('ODM_EXPORT',V_GL_CD),NULL),';') WITHIN GROUP(ORDER BY V_GL_CD) AS V_B_GL_NM
					, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'KO',V_COMMENT,''),''))  V_B_KO_COMMENT
					, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'CN',V_COMMENT,''),'')) V_B_CN_COMMENT
					, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'US',V_COMMENT,''),'')) V_B_US_COMMENT
					, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'EU',V_COMMENT,''),'')) V_B_EU_COMMENT
					, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'AE',V_COMMENT,''),'')) V_B_AE_COMMENT
					, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'KO',V_COMMENT,''),'')) V_L_KO_COMMENT
					, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'CN',V_COMMENT,''),'')) V_L_CN_COMMENT
					, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'US',V_COMMENT,''),'')) V_L_US_COMMENT
					, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'EU',V_COMMENT,''),'')) V_L_EU_COMMENT
					, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'AE',V_COMMENT,''),'')) V_L_AE_COMMENT
				FROM TSI_CON_BAN_D
				GROUP BY V_CON_CD,N_VER_SEQ
		) BAN ON MST.V_CON_CD = BAN.V_CON_CD AND MST.N_VER_SEQ = BAN.N_VER_SEQ
		LEFT OUTER JOIN (
				SELECT V_CON_CD
					, N_VER_SEQ, COUNT(*) AS N_CAS_CNT
					, LISTAGG(V_CAS_NO,';') WITHIN GROUP(ORDER BY V_CON_CD,N_VER_SEQ,V_CAS_NO) AS V_CAS_NO_LIST
					, MAX(DECODE(N_SEQ_NO, 1, V_CAS_NO, ''))  V_CAS_NO1
					, MAX(DECODE(N_SEQ_NO, 2, V_CAS_NO, ''))  V_CAS_NO2
					, MAX(DECODE(N_SEQ_NO, 3, V_CAS_NO, ''))  V_CAS_NO3
					, MAX(DECODE(N_SEQ_NO, 4, V_CAS_NO, ''))  V_CAS_NO4
				FROM TSI_CON_CAS_D 
				GROUP BY V_CON_CD,N_VER_SEQ
		) CAS ON MST.V_CON_CD = CAS.V_CON_CD AND MST.N_VER_SEQ = CAS.N_VER_SEQ
		LEFT OUTER JOIN (
				SELECT V_CON_CD
					, N_VER_SEQ
					, LISTAGG(FN_GET_FUNC_NM(V_FUNC_ID_EN,'EN'),';') WITHIN GROUP(ORDER BY V_CON_CD,N_VER_SEQ) AS V_FUNC_NM_EN_LIST
					, LISTAGG(FN_GET_FUNC_NM(V_FUNC_ID_EN,'KO'),';') WITHIN GROUP(ORDER BY V_CON_CD,N_VER_SEQ) AS V_FUNC_NM_KO_LIST
					, LISTAGG(FN_GET_FUNC_NM(V_FUNC_ID_EN,'CN'),';') WITHIN GROUP(ORDER BY V_CON_CD,N_VER_SEQ) AS V_FUNC_NM_CN_LIST
					, MAX(DECODE(N_SEQ_NO,1,V_FUNC_ID_EN,'')) AS V_FUNC_ID_EN
					, MAX(DECODE(N_SEQ_NO,1,V_FUNC_ID_KO,'')) AS V_FUNC_ID_KO
					, MAX(DECODE(N_SEQ_NO,1,V_FUNC_ID_CN,'')) AS V_FUNC_ID_CN
					, MAX(DECODE(N_SEQ_NO,1,V_FUNC_ID_EU,'')) AS V_FUNC_ID_EU
				FROM TSI_CONFC_D 
				WHERE 1=1 <!--N_SEQ_NO = 1-->
				GROUP BY V_CON_CD,N_VER_SEQ
		) FC ON MST.V_CON_CD = FC.V_CON_CD AND MST.N_VER_SEQ = FC.N_VER_SEQ
		
		
		WHERE 1=1
		AND MST.V_USE_YN ='Y'
		<if test="i_sEnConNm != null and i_sEnConNm != ''">
			AND	(UPPER(MST.V_CON_NM_EN) LIKE '%'|| UPPER(#{i_sEnConNm}) ||'%' 
				OR UPPER(MST.V_CON_NM_KO) LIKE '%'|| UPPER(#{i_sEnConNm}) ||'%' 
				OR UPPER(MST.V_CON_CD) LIKE '%'|| UPPER(#{i_sEnConNm}) ||'%'
				OR EXISTS (
					SELECT 1 FROM TSI_CON_CAS_D I WHERE I.V_CON_CD = MST.V_CON_CD AND I.N_VER_SEQ = MST.N_VER_SEQ AND UPPER(I.V_CAS_NO) LIKE '%'|| UPPER(#{i_sEnConNm}) ||'%'
					)
				)
		</if>
		<if test="i_sConCd != null and i_sConCd != ''">
			AND	MST.V_CON_CD = #{i_sConCd}
		</if>		
		<if test="i_nVerSeq != null and i_nVerSeq != ''">
			AND MST.N_VER_SEQ = #{i_nVerSeq}
		</if>
		<if test="i_searchVerSeq != null and i_searchVerSeq != ''">
			AND MST.N_VER_SEQ = #{i_searchVerSeq}
		</if>
		<if test="i_sAllergenYn != null and i_sAllergenYn != ''">
			AND MST.V_ALLERGEN_YN = #{i_sAllergenYn}
		</if>
		<if test="i_sConfirmYn != null and i_sConfirmYn != ''">
			AND MST.V_CONFIRM_YN = #{i_sConfirmYn}
		</if>
		<if test="i_arrLim != null">
			AND	MST.V_FLAG_PERMIT IN 
			<foreach collection="i_arrLim" item="item" index="index"  open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="i_arrBan != null">
			AND	MST.V_FLAG_BAN IN 
			<foreach collection="i_arrBan" item="item" index="index"  open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>	 	
	</sql>
	
	<!--	성분DB 목록 조회	-->
	<select id="selectSiIm010List"  parameterType="CmMap" resultType="CmMap">
	SELECT * FROM /* SiIm010Mapper.selectSiIm010List */
		(SELECT ROW_NUMBER() OVER(ORDER BY
					<choose> 
						<when test="i_sSortCol != null and i_sSortCol != '' and i_sSortDir != null and i_sSortDir != '' ">
							${i_sSortCol} ${i_sSortDir}
						</when>	 
						<otherwise>
							V_REG_DTM DESC, V_CON_CD DESC
						</otherwise>	
					</choose>
					) AS N_NUM
					
					,T.* 
		FROM
			(
			SELECT MST.V_CON_CD
					,MST.N_VER_SEQ
					,MST.V_CON_NM_KO
					,MST.V_CON_NM_CN
					,MST.V_CON_NM_EN
					,NVL(MST.V_ALLERGEN_YN,'N') V_ALLERGEN_YN
					,MST.N_MAX_ALLOW_WT
					,MST.V_FLAG_BAN
					,MST.V_FLAG_PERMIT
					,TO_CHAR(TO_DATE(MST.V_REG_DTM,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') V_REG_DTM
					,MST.V_REG_USER_ID
					,MST.V_FLAG
					,DECODE(MST.V_FLAG, 'O', 'ODM', 'SI') AS V_FLAG_NM
					,MST.V_CI_YN
					,MST.V_CONFIRM_YN
					,FN_GET_USERNM(MST.V_REG_USER_ID) V_REG_USER_NM		
					,FN_GET_USERNM(MST.V_UPDATE_USER_ID) V_UPDATE_USER_NM
					,FN_GET_BAN_CLASS_NM(MST.V_CON_CD,MST.N_VER_SEQ,'B') AS V_BAN_COUNTRY
					,FN_GET_BAN_CLASS_NM(MST.V_CON_CD,MST.N_VER_SEQ,'L') AS V_PERMIT_COUNTRY
					,MST.V_MATEVIEW_YN
					,MST.V_DISPLAY_YN
					,CAS.V_CAS_NO_LIST
					,CAS.V_CAS_NO1
					,CAS.V_CAS_NO2
					,CAS.N_CAS_CNT
					,BAN.V_L_GL_NM
					,BAN.V_B_GL_NM
					,BAN.V_B_KO_COMMENT
					,BAN.V_B_CN_COMMENT
					,BAN.V_B_US_COMMENT
					,BAN.V_B_EU_COMMENT
					,BAN.V_B_AE_COMMENT
					,BAN.V_L_KO_COMMENT
					,BAN.V_L_CN_COMMENT
					,BAN.V_L_US_COMMENT
					,BAN.V_L_EU_COMMENT
					,BAN.V_L_AE_COMMENT
					,FC.V_FUNC_NM_EN_LIST
					,FC.V_FUNC_NM_KO_LIST
					,FC.V_FUNC_NM_CN_LIST
					,FC.V_FUNC_ID_EN
					,FC.V_FUNC_ID_KO
					,FC.V_FUNC_ID_CN
					,FC.V_FUNC_ID_EU
					,FN_GET_FUNC_NM(FC.V_FUNC_ID_EN, 'EN') AS V_FUNC_NM_EN
					,FN_GET_FUNC_NM(FC.V_FUNC_ID_KO, 'KO') AS V_FUNC_NM_KO
					,FN_GET_FUNC_NM(FC.V_FUNC_ID_CN, 'CN') AS V_FUNC_NM_CN
					,FN_GET_FUNC_NM(FC.V_FUNC_ID_EU, 'EU') AS V_FUNC_NM_EU
			<include refid="siIm010ListInclude"/>
			 ) T
		 ) TEMP
		 WHERE 1=1
		<if test='i_sFlagExcelAll != "Y"'>
		 AND TEMP.N_NUM BETWEEN #{i_iStartRownum} AND #{i_iEndRownum}
		</if>
	</select>
	
	<!--	성분DB목록 Count조회	-->
	<select id="getSiIm010ListCount" parameterType="CmMap" resultType="java.lang.Integer">	
		SELECT /* SiIm010Mapper.getSiIm010ListCount */ 
			COUNT(*) AS CNT 
		<include refid="siIm010ListInclude"/>
	</select>
	
	<!--	성분DB관리 상세 조회	-->
	<select id="selectSiim010Info" parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010Info */
			MST.V_CON_CD
			,MST.N_VER_SEQ
			,MST.V_FLAG
			,MST.V_REQ_CON_ID
			,NVL(MST.V_CI_YN,'N') V_CI_YN
			,<![CDATA[REPLACE(MST.V_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_COMMENT
			,MST.V_COMMENT
			,MST.V_IF_YN
			,MST.V_DEL_YN
			,MST.V_CON_NM_KO
			,MST.V_CON_NM_EN
			,MST.V_CON_NM_CN
			,MST.V_CON_NM_JP
			,MST.V_CON_NM_EU
			,NVL(MST.V_ALLERGEN_YN,'N') V_ALLERGEN_YN
			,MST.N_MAX_ALLOW_WT
			,MST.V_FLAG_BAN
			,MST.V_FLAG_PERMIT
			,MST.V_REG_DTM
			,MST.V_REG_USER_ID
			,MST.V_UPDATE_DTM
			,MST.V_UPDATE_USER_ID
			,MST.V_CONFIRM_YN
			,NVL(MST.V_ZCERT,'N') V_ZCERT
			,(SELECT MAX(N_VER_SEQ) FROM TSI_CON_M WHERE V_CON_CD = MST.V_CON_CD) N_MAX_VER_SEQ
			,(SELECT V_CONFIRM_YN FROM TSI_CON_M WHERE V_CON_CD = MST.V_CON_CD AND N_VER_SEQ = SUB.N_VER_SEQ) V_MAX_CONFIRM_YN
			,<![CDATA[REPLACE(BAN.V_B_KO_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_B_KO_COMMENT
			,<![CDATA[REPLACE(BAN.V_B_CN_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_B_CN_COMMENT
			,<![CDATA[REPLACE(BAN.V_B_US_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_B_US_COMMENT
			,<![CDATA[REPLACE(BAN.V_B_EU_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_B_EU_COMMENT
			,<![CDATA[REPLACE(BAN.V_B_AE_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_B_AE_COMMENT	
			,<![CDATA[REPLACE(BAN.V_L_KO_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_L_KO_COMMENT
			,<![CDATA[REPLACE(BAN.V_L_CN_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_L_CN_COMMENT
			,<![CDATA[REPLACE(BAN.V_L_US_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_L_US_COMMENT
			,<![CDATA[REPLACE(BAN.V_L_EU_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_L_EU_COMMENT
			,<![CDATA[REPLACE(BAN.V_L_AE_COMMENT,chr(13)||chr(10),'<br/>')]]> V_R_L_AE_COMMENT			
			,V_MATEVIEW_YN
			,V_DISPLAY_YN
		<include refid="siIm010ListInclude"/>		
	</select>
	<select id="selectSiim010RegInfo" parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010Info */
			MST.V_CON_CD
			,MST.V_FLAG
			,(SELECT MAX(N_VER_SEQ) FROM TSI_CON_M WHERE V_CON_CD = MST.V_CON_CD) N_MAX_VER_SEQ			
		<include refid="siIm010ListInclude"/>		
	</select>
	
	<!-- 	성분DB CasNo 리스트 조회 -->
	<select id ='selectSiim010CasNo' parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010CasNo */
			V_CON_CD
			, N_VER_SEQ
			, N_SEQ_NO
			, V_CAS_NO
			, V_IF_YN
			, V_REG_USER_ID
			, V_REG_DTM
			, V_UPDATE_USER_ID
			, V_UPDATE_DTM
		FROM TSI_CON_CAS_D
		WHERE 1=1
		AND	V_CON_CD = #{i_sConCd}
		AND	N_VER_SEQ = #{i_nVerSeq}
	</select>
	
	<!-- 	성분DB Func 콤보박스 리스트 조회 -->
	<select id ='selectSiim010FuncComboList' parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010FuncComboList */
			V_FUNC_ID
			, V_FUNC_NM_EN
			, V_FUNC_NM_KO
			, V_FUNC_NM_CN
			, V_FUNC_NM_EU
			, V_FUNC_NM_JP
			, V_DEL_YN 
		FROM TSI_FCIX_L
		WHERE V_DEL_YN ='N'
		ORDER BY V_FUNC_NM_EN ASC
	</select>
	
	<!-- 	성분DB 사용금지/배합제한 정보 조회 -->
	<select id ='selectSiim010BanDesc' parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010BanDesc */
			MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'KO',V_COMMENT,''),''))  V_B_KO_COMMENT
			, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'CN',V_COMMENT,''),'')) V_B_CN_COMMENT
			, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'US',V_COMMENT,''),'')) V_B_US_COMMENT
			, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'EU',V_COMMENT,''),'')) V_B_EU_COMMENT
			, MAX(DECODE(V_FLAG,'B',DECODE(V_GL_CD,'AE',V_COMMENT,''),'')) V_B_AE_COMMENT
			, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'KO',V_COMMENT,''),'')) V_L_KO_COMMENT
			, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'CN',V_COMMENT,''),'')) V_L_CN_COMMENT
			, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'US',V_COMMENT,''),'')) V_L_US_COMMENT
			, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'EU',V_COMMENT,''),'')) V_L_EU_COMMENT
			, MAX(DECODE(V_FLAG,'L',DECODE(V_GL_CD,'AE',V_COMMENT,''),'')) V_L_AE_COMMENT
			, (SELECT WM_CONCAT(V_GL_CD) FROM TSI_CON_BAN_D WHERE V_CON_CD=#{i_sConCd} AND N_VER_SEQ=#{i_nVerSeq} AND V_FLAG='B') V_GL_B_CD
			, (SELECT WM_CONCAT(V_GL_CD) FROM TSI_CON_BAN_D WHERE V_CON_CD=#{i_sConCd} AND N_VER_SEQ=#{i_nVerSeq} AND V_FLAG='L') V_GL_L_CD
		FROM 
		TSI_CON_BAN_D
		WHERE 1=1
		AND	V_CON_CD = #{i_sConCd}
		AND	N_VER_SEQ = #{i_nVerSeq}
	</select>
	
	<!-- 	성분DB관리 기능 목록 조회 -->
	<select id ='selectSiim010Func' parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectSiim010Func */
			V_CON_CD
			, N_VER_SEQ
			, N_SEQ_NO
			, V_FUNC_ID_EN
			, V_FUNC_ID_KO
			, V_FUNC_ID_CN
			, V_FUNC_ID_EU
			, V_FUNC_ID_JP
			, (SELECT V_FUNC_NM_EN FROM TSI_FCIX_L WHERE V_FUNC_ID = V_FUNC_ID_EN) V_FUNC_NM_EN
			, (SELECT V_FUNC_NM_KO FROM TSI_FCIX_L WHERE V_FUNC_ID = V_FUNC_ID_KO) V_FUNC_NM_KO
			, (SELECT V_FUNC_NM_CN FROM TSI_FCIX_L WHERE V_FUNC_ID = V_FUNC_ID_CN) V_FUNC_NM_CN
			, (SELECT V_FUNC_NM_EU FROM TSI_FCIX_L WHERE V_FUNC_ID = V_FUNC_ID_EU) V_FUNC_NM_EU
			, (SELECT V_FUNC_NM_JP FROM TSI_FCIX_L WHERE V_FUNC_ID = V_FUNC_ID_JP) V_FUNC_NM_JP
			, V_IF_YN
			, V_REG_USER_ID
			, V_REG_DTM
			, V_UPDATE_USER_ID
			, V_UPDATE_DTM
		FROM TSI_CONFC_D
		WHERE 1=1
		AND	V_CON_CD = #{i_sConCd}
		AND	N_VER_SEQ = #{i_nVerSeq}
	</select>

	<!-- 성분DB ODM팝업 기본 SQL -->
	<sql id="selectConListInclude">
		FROM(
			SELECT
				REQ.V_REQ_CON_ID
				, REQ.V_INCI_NM_KO
				, REQ.V_INCI_NM_EN
				, REQ.V_OPINION
				, REQ.V_STATE
				, FN_SUB_CODENM('CONREQ_STATUS',V_STATE) V_STATE_NM
				, REQ_CAS.CAS_NO_ROW
				, REQ.V_REG_DTM
				, TO_CHAR(TO_DATE(REQ.V_REQ_DTM,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') V_REQ_DTM
				, TO_CHAR(TO_DATE(REQ.V_CONFM_DTM,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') V_CONFM_DTM
				, (SELECT  B.V_VENDOR_NM FROM TODM_VD_I AS B WHERE B.V_VENDOR_ID = REQ.V_VENDOR_ID) ||' (' || REQ.V_USER_NM ||')' AS V_USER_VENDOR_NM
				, REQ_CAS.*
			FROM TODM_CONRQ_M REQ
			LEFT OUTER JOIN (
				SELECT 
					V_REQ_CON_ID
					, WM_CONCAT(V_CAS_NO) AS CAS_NO_ROW
					, MIN(V_CAS_NO)  V_CAS_NO1
		    	    , COUNT(*) AS N_CAS_CNT
				FROM TODM_CONRQ_CAS_D 
				GROUP BY V_REQ_CON_ID
			) REQ_CAS
			ON REQ.V_REQ_CON_ID = REQ_CAS.V_REQ_CON_ID
			WHERE 1=1
			AND REQ.V_STATE IN ('CO_ST01', 'CO_ST04')
			<if test="i_sSearchInciName != null and i_sSearchInciName != ''">
				AND (TRIM(UPPER(REQ.V_INCI_NM_KO)) || TRIM(UPPER(REQ.V_INCI_NM_EN)) || TRIM(UPPER(REQ_CAS.CAS_NO_ROW))) LIKE '%'|| TRIM(UPPER(#{i_sSearchInciName})) ||'%'
				
			</if>
			<if test="i_sReqConId != null and i_sReqConId != ''">
				AND REQ.V_REQ_CON_ID = #{i_sReqConId}
			</if>
		) M
	</sql>
	
	<!-- 성분DB ODM팝업 목록 조회 -->
	<select id="selectConList" parameterType="CmMap" resultType="CmMap">
		SELECT /* SiIm010Mapper.selectConList */	
			TEMP.* FROM(
			SELECT
				M.*
				,ROW_NUMBER() OVER(ORDER BY
					<choose> 
						<when test="i_sSortCol != null and i_sSortCol != '' and i_sSortDir != null and i_sSortDir != '' ">
							${i_sSortCol} ${i_sSortDir}
						</when>	 
						<otherwise>
							V_REG_DTM DESC
						</otherwise>	
					</choose>
				) AS N_RNUM
		<include refid="selectConListInclude"/>
		) TEMP
		WHERE 1=1
		 AND TEMP.N_RNUM BETWEEN #{i_iStartRownum} AND #{i_iEndRownum}
	</select>
	
	<!-- 성분DB ODM팝업 목록 카운트 조회 -->	
	<select id="selectConListCount" parameterType="CmMap" resultType="java.lang.Integer">
		SELECT /* SiIm010Mapper.selectConListCount */	
			COUNT(*)
		<include refid="selectConListInclude"/>
	</select>
	
	<!-- 	성분DB관리 마스터정보 저장 -->
	<insert id="insertSiim010Info" parameterType="CmMap">
		INSERT /* SiIm010Mapper.insertSiim010Info */	 
			INTO TSI_CON_M (
			V_CON_CD
			, N_VER_SEQ
			, V_FLAG
			, V_REQ_CON_ID
			, V_CI_YN
			, N_MAX_ALLOW_WT
			, V_ALLERGEN_YN
			, V_FLAG_BAN
			, V_FLAG_PERMIT
			, V_COMMENT
			, V_MAX_INPUT_APPLY_YN
			, V_CONFIRM_YN
			, V_ZCERT
			, V_CON_NM_KO 
			, V_CON_NM_EN 
			, V_CON_NM_CN 
			, V_CON_NM_JP 
			, V_CON_NM_EU 
			, V_REG_USER_ID
			, V_REG_DTM	
			, V_MATEVIEW_YN
			, V_DISPLAY_YN
		)VALUES(
			#{i_sConCd}			
			<choose> 
				<when test="i_sFlagNewwVer != null and i_sFlagNewwVer != ''">
					, #{i_nVerSeq}
				</when>	 
				<otherwise>											
				   	, (SELECT NVL(MAX(N_VER_SEQ),0)+1 FROM TSI_CON_M WHERE V_CON_CD=#{i_sConCd})
				</otherwise>	
			</choose>
			, #{i_sFlag}
			, #{i_sReqConId}
			, NVL(#{i_sCiYn},'N')
			, #{i_nMaxAllowWt}
			, NVL(#{i_sAllergenYn},'N')
			, #{i_sFlagBanB}
			, #{i_sFlagBanL}
			, #{i_sComment}
			, NULL
			, #{i_sConfirmYn}
			, NVL(#{i_sZcert},'N')
			, #{i_sConNmKo}
			, #{i_sConNmEn} 
			, #{i_sConNmCn} 
			, #{i_sConNmJp} 
			, #{i_sConNmEu} 
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, #{i_sMateViewYn}
			, #{i_sDisplayYn}
		)
	</insert>
	
	<!-- 	성분DB관리 사용금지/배합제한 저장 -->
	<insert id='insertSiim010Ban' parameterType="CmMap">
		INSERT /* SiIm010Mapper.insertSiim010Ban */ 
		INTO TSI_CON_BAN_D(
			V_CON_CD
			, N_VER_SEQ
			, V_GL_CD
			, V_FLAG
			, V_COMMENT
			, V_REG_USER_ID
			, V_REG_DTM
		)VALUES(
			#{i_sConCd}
			, #{i_nVerSeq}
			, #{i_sFlagBanCode}
			, #{i_sFlagBan} 
			, #{i_sCommentBan}  
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
		)		
	</insert>
	
	<!-- 	성분DB관리 CasNo 저장 -->
	<insert id='insertSiim010CasNo' parameterType="CmMap">
		INSERT /* SiIm010Mapper.insertSiim010CasNo */ 
		INTO TSI_CON_CAS_D(
			V_CON_CD
			, N_VER_SEQ
			, N_SEQ_NO
			, V_CAS_NO
			, V_REG_USER_ID
			, V_REG_DTM
			, V_UPDATE_USER_ID
			, V_UPDATE_DTM
		)VALUES(
			#{i_sConCd}
			, #{i_nVerSeq}
			, #{i_nSeqNo}
			, #{i_sCasNo}   
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
		)		
	</insert>
	<!-- 	성분DB관리 기능 저장 -->
	<insert id='insertSiim010Func' parameterType="CmMap">
		INSERT /* SiIm010Mapper.insertSiim010Func */ 
		INTO TSI_CONFC_D(
			V_CON_CD
			, N_VER_SEQ
			, N_SEQ_NO
			, V_FUNC_ID_EN
			, V_FUNC_ID_KO
			, V_FUNC_ID_CN
			, V_FUNC_ID_EU
			, V_FUNC_ID_JP
			, V_REG_USER_ID
			, V_REG_DTM
		)VALUES(
			#{i_sConCd}
			, #{i_nVerSeq}
			, #{i_nSeqNo}
			, #{i_sFuncCdEn}
			, #{i_sFuncCdKo}
			, #{i_sFuncCdCn}
			, NVL(#{i_sFuncCdEu},#{i_sFuncCdEn})
			, NVL(#{i_sFuncCdJp},#{i_sFuncCdEn}) 
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
		)
	</insert>
	
	<!-- 	성분DB관리 마스터정버 수정 -->
	<update id='updateSiim010Info' parameterType="CmMap">
		UPDATE /* SiIm010Mapper.updateSiim010Info */ 
		TSI_CON_M SET
			V_FLAG                  =   #{i_sFlag}
			, V_REQ_CON_ID        =   #{i_sReqConId}
			, V_CI_YN                =   NVL(#{i_sCiYn},'N')
			, N_MAX_ALLOW_WT         =   #{i_nMaxAllowWt}
			, V_ALLERGEN_YN           =  NVL(#{i_sAllergenYn},'N')
			, V_FLAG_BAN             =   #{i_sFlagBanB}
			, V_FLAG_PERMIT          =   #{i_sFlagBanL}
			, V_COMMENT              =   #{i_sComment}
			, V_MAX_INPUT_APPLY_YN    =   NULL
			, V_CONFIRM_YN           =   #{i_sConfirmYn}
			, V_ZCERT				 =	 NVL(#{i_sZcert},'N')
			, V_CON_NM_KO			 =	 #{i_sConNmKo}  
			, V_CON_NM_EN			 =	 #{i_sConNmEn}  
			, V_CON_NM_CN			 =	 #{i_sConNmCn}  
			, V_CON_NM_JP			 =	 #{i_sConNmJp} 
			, V_CON_NM_EU			 =	 #{i_sConNmEu}   
			, V_UPDATE_USER_ID		 =	 #{i_sUserId}
			, V_UPDATE_DTM			 =	 TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')			
			, V_MATEVIEW_YN			= #{i_sMateViewYn}
			, V_IF_YN				= 'N'
			, V_IF_CIIMS_YN = 'N'			
			, V_DISPLAY_YN			= #{i_sDisplayYn}
		WHERE V_CON_CD = #{i_sConCd}
		AND N_VER_SEQ = #{i_nVerSeq}
	</update>
	<!-- 성분등록 요청 -> 성분DB(확정)  -->
	<update id='updateOdmConcdReqRegCompl' parameterType="CmMap">
		UPDATE /* SiIm010Mapper.updateOdmConcdReqRegCompl */
		TODM_CONRQ_M SET
			 V_INCI_NM_KO		= #{i_sConNmKo}
			, V_INCI_NM_EN 		= #{i_sConNmEn}
			, V_OPINION 		= #{i_sComment}
			, V_STATE         	= 'CO_ST04'
			, V_REG_CON_CD 		= #{i_sConCd}
			, V_UPDATE_USER_ID    = #{i_sUserId}                                         
			, V_UPDATE_DTM        = TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, V_IF_YN			  = 'N'
		WHERE V_REQ_CON_ID = #{i_sReqConId}
	</update>
	<!-- 성분등록 요청 -> 성분DB(임시저장)  -->
	<update id='updateOdmConcdReqRegTmpsave' parameterType="CmMap">
		UPDATE /* SiIm010Mapper.updateOdmConcdReqRegTmpsave */
		TODM_CONRQ_M SET
			  V_INCI_NM_KO		= #{i_sConNmKo}
			, V_INCI_NM_EN 		= #{i_sConNmEn}
			, V_OPINION 		= #{i_sComment}
			, V_REG_CON_CD 		= #{i_sConCd}
			, V_UPDATE_USER_ID    = #{i_sUserId}                                         
			, V_UPDATE_DTM        = TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, V_IF_YN			  = 'N'
		WHERE V_REQ_CON_ID = #{i_sReqConId}
	</update>
	<!-- 성분등록 요청 -> 성분DB(임시저장, 확정) CASNO 등록 -->
	<insert id='insertOdmCasNoReqRegTmpsave' parameterType="CmMap">
		INSERT /* SiIm010Mapper.insertOdmCasNoReqRegTmpsave */ 
		INTO TODM_CONRQ_CAS_D(
			 V_REQ_CON_ID
			, N_SEQ_NO
			, V_CAS_NO
			, V_IF_YN
			, V_REG_USER_ID
			, V_REG_DTM
			, V_UPDATE_USER_ID
			, V_UPDATE_DTM
		)VALUES(
			 #{i_sReqConId}
			, #{i_nSeqNo}
			, #{i_sCasNo}   
			, 'N'
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, #{i_sUserId}
			, TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
		)
	</insert>
	
	<!-- 	성분DB관리 배합제한/사용금지 제거-->
	<delete id='deleteSiim010Ban' parameterType="CmMap">
		DELETE /* SiIm010Mapper.deleteSiim010Ban */ 
		TSI_CON_BAN_D
		WHERE V_CON_CD = #{i_sConCd}
		AND	N_VER_SEQ = #{i_nVerSeq}
		AND V_FLAG = #{i_sFlagBan}
	</delete>
	
	<!-- 	성분DB관리 CasNo 삭제 -->
	<delete id='deleteSiim010CasNo' parameterType="CmMap">
		DELETE /* SiIm010Mapper.deleteSiim010CasNo */ 
		TSI_CON_CAS_D
		WHERE V_CON_CD = #{i_sConCd}
		AND N_VER_SEQ = #{i_nVerSeq}
	</delete>
	
	<!-- 	성분DB관리 기능 삭제 -->
	<delete id='deleteSiim010Func' parameterType="CmMap">
		DELETE /* SiIm010Mapper.deleteSiim010Func */  
		TSI_CONFC_D
		WHERE V_CON_CD = #{i_sConCd}
		AND N_VER_SEQ = #{i_nVerSeq}
	</delete>
	
	<!-- 	성분DB관리 최대 성분코드 조회 -->
	<select id='getMaxConCd' parameterType="CmMap" resultType="java.lang.String">
		SELECT /* SiIm010Mapper.getMaxConCd */ 
		LPAD(TO_CHAR(NVL(MAX(V_CON_CD),0)+1), 5, '0') V_CON_CD FROM TSI_CON_M
		WHERE V_CON_CD LIKE #{i_nConNum}||'%'
	</select>
	
	<!-- 	성분DB관리 최대 버전 조회 -->
	<select id='getMaxVerSeq' parameterType="CmMap" resultType="java.lang.String">
		SELECT /* SiIm010Mapper.getMaxVerSeq */ 
		TO_CHAR(NVL(MAX(N_VER_SEQ),0)+1) V_CON_CD FROM TSI_CON_M
		WHERE V_CON_CD = #{i_sConCd}
	</select>
	
	<update id='deleteSiim010Info' parameterType="CmMap">
		UPDATE /* SiIm010Mapper.updateSiim010Info */ 
		TSI_CON_M SET
			V_CONFIRM_YN           =   'Y'
			, V_DEL_YN          	 =   'Y'
			, V_UPDATE_USER_ID		 =	 #{i_sUserId}
			, V_UPDATE_DTM			 =	 TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISS')
			, V_IF_YN			  = 'N'
			, V_IF_CIIMS_YN = 'N'
		WHERE V_CON_CD = #{i_sConCd}
		AND N_VER_SEQ = #{i_nVerSeq}
	</update>
</mapper>